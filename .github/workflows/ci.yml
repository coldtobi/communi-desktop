name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build
    runs-on: ${{matrix.os}}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{runner.os}}-QtCache

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        cached: ${{steps.cache-qt.outputs.cache-hit}}

    - name: Git Checkout libcommuni
      uses: actions/checkout@v2
      with:
        repository: communi/libcommuni
        path: libcommuni

    - name: Install libcommuni (Linux & macOS)
      run: |
        qmake -config verbose -config no_examples -config no_qml -config no_tests
        make -j2
        make install
      working-directory: libcommuni
      if: matrix.os != 'windows-latest'

    - name: Install libcommuni (Windows)
      run: |
        call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        set CL=/MP
        qmake -config verbose -config no_examples -config no_qml -config no_tests
        nmake
        nmake install
      shell: cmd
      working-directory: libcommuni
      if: matrix.os == 'windows-latest'

    - name: Git Checkout communi-desktop
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Build (Linux & macOS)
      run: |
        qmake -config verbose
        make -j2
      if: matrix.os != 'windows-latest'

    - name: Build (Windows)
      run: |
        call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        set CL=/MP
        qmake -config verbose
        nmake
      shell: cmd
      if: matrix.os == 'windows-latest'
